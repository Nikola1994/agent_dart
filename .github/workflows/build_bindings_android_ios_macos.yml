name: Rust Bindings (Android & iOS & macOS)

on:
  workflow_dispatch:

jobs:
  ci:
    name: Compile, Build and Release
    runs-on: macos-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      - name: Install Rust Toolchain
        id: rust-toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.64.0
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-lipo

      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '8'

      - name: Setup NDK
        id: setup-ndk
        run: |
          ANDROID_HOME=$HOME/Library/Android/sdk
          SDKMANAGER=$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager
          echo y | $SDKMANAGER "ndk;21.4.7075529"
          ln -sfn $ANDROID_HOME/ndk/21.4.7075529 $ANDROID_HOME/ndk-bundle

      - name: Setup Android NDK list
        run: |
          echo "$NDK_HOME/toolchains/llvm/prebuild/darwin-x86_64/aarch64-linux-android/bin:$PATH" >> $GITHUB_PATH
          echo "$NDK_HOME/toolchains/llvm/prebuild/darwin-x86_64/arm-linux-androideabi/bin:$PATH" >> $GITHUB_PATH
          echo "$NDK_HOME/toolchains/llvm/prebuild/darwin-x86_64/i686-linux-android/bin:$PATH" >> $GITHUB_PATH
          echo "$NDK_HOME/toolchains/llvm/prebuild/darwin-x86_64/x86_64-linux-android/bin:$PATH" >> $GITHUB_PATH

      - name: Cache deps
        uses: actions/cache@v3
        id: cache-deps
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
            target/aarch64-linux-android
            target/armv7-linux-androideabi
            target/x86_64-linux-android
            target/i686-linux-android
            target/aarch64-apple-ios
            target/x86_64-apple-ios
            target/aarch64-apple-darwin
            target/x86_64-apple-darwin
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-${{ steps.rust-toolchain.outputs.rustc_hash }}

      - name: Cache LLVM and Clang
        id: cache-llvm
        uses: actions/cache@v3
        with:
          path: ${{ runner.temp }}/llvm/11.0
          key: ${{ runner.os }}-cached-llvm-11.0

      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: '11.0'
          directory: ${{ runner.temp }}/llvm/11.0
          cached: ${{ steps.cache-llvm.outputs.cache-hit }}

      - name: Install WASM Target
        run: rustup target add wasm32-unknown-unknown

      - name: Install `cargo-ndk`
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: cargo install cargo-ndk --force

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Run Flutter pub get
        run: flutter pub get

      - name: Install Android Targets
        run: rustup target add aarch64-linux-android armv7-linux-androideabi x86_64-linux-android i686-linux-android

      - name: Execute cargo test
        run: |
          cd rust
          cargo test

      - name: Execute build scripts
        run: |
          bash ./scripts/clean.sh
          bash ./scripts/clean_rust.sh
          bash ./scripts/bootstrap.sh

      - name: Run binding/crypto tests
        run: flutter test

      - name: Run uncleaned git update
        run: git fetch origin && git merge --ff-only --strategy-option ours

      - name: Commit files
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: (Android & iOS & macOS) Bindings

      - name: Run if changes have been detected
        if: steps.auto-commit-action.outputs.changes_detected == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

      - name: Create Pull Request
        if: steps.auto-commit-action.outputs.changes_detected == 'true'
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: Update build bindings for ios android and macos
          title: 'Update build bindings for ios android and macos'
          body: >
            This PR is auto-generated by 
            [create-pull-request](https://github.com/peter-evans/create-pull-request).
          branch: main
          labels: automerge, automated pr

      - name: Run if no changes have been detected
        if: steps.auto-commit-action.outputs.changes_detected == 'false'
        run: echo "No Changes!"
